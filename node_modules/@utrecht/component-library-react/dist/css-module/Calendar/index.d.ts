import { Locale } from 'date-fns';
import { FC } from 'react';
export type Events = {
    date: string;
    emphasis?: boolean;
    selected?: boolean;
    disabled?: boolean;
};
interface CalendarProps {
    /**
     * `onCalendarClick` It's a callback function that returns the selected date, triggered when you click on the day
     *
     * */
    onCalendarClick: (date: string) => void;
    /**
     * `events` An array of event objects that contain some properties that allow you to change the calendar day style base on your value
     * `{date?: Date; emphasis?: boolean; selected?: boolean; disabled?: boolean;}`
     *
     * */
    events?: Events[];
    /**
     * `currentDate` The default value is `new Date()`, but you can provide a different date
     *   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date
     * */
    currentDate?: Date;
    /**
     * `locale` to change the calendar language by using 'date-fns/locale'
     *  `import { nl, enUS } from 'date-fns/locale';`
     * */
    locale?: Locale;
    previousYearButtonTitle?: string;
    nextYearButtonTitle?: string;
    previousMonthButtonTitle?: string;
    nextMonthButtonTitle?: string;
    minDate?: Date;
    maxDate?: Date;
}
/**
 * Calendar Component
 * powered by date-fns, so that make it easy to use the `date-fns` date functions & locale
 * */
export declare const Calendar: FC<CalendarProps>;
export {};
