import _slicedToArray from '@babel/runtime/helpers/slicedToArray';
import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import { forwardRef, useId, useRef, useState, createElement } from 'react';
import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
import clsx, { clsx as clsx$1 } from 'clsx';
import _objectDestructuringEmpty from '@babel/runtime/helpers/objectDestructuringEmpty';
import _extends from '@babel/runtime/helpers/extends';
import { startOfWeek, endOfWeek, eachDayOfInterval, isSameDay, endOfDay, parseISO, setYear, getYear, addYears, setMonth, addMonths, format, isSameMonth, formatISO, isBefore, startOfDay, isAfter, startOfMonth, addWeeks } from 'date-fns';
import { enUS } from 'date-fns/locale';
import chunk from 'lodash.chunk';

var _excluded$1j = ["appearance", "busy", "disabled", "children", "className", "hint", "pressed", "type"];
function ownKeys$1j(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1j(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1j(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1j(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Button = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var appearance = _ref.appearance,
    busy = _ref.busy,
    disabled = _ref.disabled,
    children = _ref.children,
    className = _ref.className,
    hint = _ref.hint,
    pressed = _ref.pressed,
    type = _ref.type,
    restProps = _objectWithoutProperties(_ref, _excluded$1j);
  return jsx("button", _objectSpread$1j(_objectSpread$1j({
    ref: ref,
    className: clsx('utrecht-button', busy && 'utrecht-button--busy', disabled && 'utrecht-button--disabled', type === 'submit' && 'utrecht-button--submit', appearance === 'primary-action-button' && 'utrecht-button--primary-action', appearance === 'secondary-action-button' && 'utrecht-button--secondary-action', appearance === 'subtle-button' && 'utrecht-button--subtle', hint === 'danger' && 'utrecht-button--danger', hint === 'warning' && 'utrecht-button--warning', hint === 'ready' && 'utrecht-button--ready', pressed === true && 'utrecht-button--pressed', className),
    "aria-busy": busy || undefined,
    "aria-pressed": typeof pressed === 'boolean' ? pressed : undefined,
    disabled: disabled,
    type: type || 'button'
  }, restProps), {}, {
    children: children
  }));
});
Button.displayName = 'Button';
var PrimaryActionButton = function PrimaryActionButton(_ref2) {
  var args = _extends({}, (_objectDestructuringEmpty(_ref2), _ref2));
  return jsx(Button, _objectSpread$1j(_objectSpread$1j({}, args), {}, {
    appearance: "primary-action-button"
  }));
};
PrimaryActionButton.displayName = 'PrimaryActionButton';
var SecondaryActionButton = function SecondaryActionButton(_ref3) {
  var args = _extends({}, (_objectDestructuringEmpty(_ref3), _ref3));
  return jsx(Button, _objectSpread$1j(_objectSpread$1j({}, args), {}, {
    appearance: "secondary-action-button"
  }));
};
SecondaryActionButton.displayName = 'SecondaryActionButton';
var SubtleButton = function SubtleButton(_ref4) {
  var args = _extends({}, (_objectDestructuringEmpty(_ref4), _ref4));
  return jsx(Button, _objectSpread$1j(_objectSpread$1j({}, args), {}, {
    appearance: "subtle-button"
  }));
};
SubtleButton.displayName = 'SubtleButton';

var _excluded$1i = ["appearance", "className", "level"];
function ownKeys$1i(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1i(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1i(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1i(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var appearance = _ref.appearance,
    className = _ref.className,
    level = _ref.level,
    restProps = _objectWithoutProperties(_ref, _excluded$1i);
  var appearances = ['utrecht-heading-1', 'utrecht-heading-2', 'utrecht-heading-3', 'utrecht-heading-4', 'utrecht-heading-5', 'utrecht-heading-6'];
  var HeadingX = level === 2 ? 'h2' : level === 3 ? 'h3' : level === 4 ? 'h4' : level === 5 ? 'h5' : level === 6 ? 'h6' : 'h1';
  var headingClassName = appearance && appearances.indexOf(appearance) !== -1 ? appearance : appearances[level - 1] || 'utrecht-heading-1';
  return jsx(HeadingX, _objectSpread$1i(_objectSpread$1i({
    className: clsx(headingClassName, className)
  }, restProps), {}, {
    ref: ref
  }));
});
Heading.displayName = 'Heading';

var _excluded$1h = ["children", "group", "headingLevel", "heading"];
function ownKeys$1h(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1h(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1h(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1h(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
/**
 * Find the first item in an array
 */
var firstItem = function firstItem(items) {
  return items.length >= 1 ? items[0] : undefined;
};
/**
 * Find the last item in an array
 */
var lastItem = function lastItem(items) {
  return items.length >= 1 ? items[items.length - 1] : undefined;
};
/**
 * Find the next item in an array, compared to an item in the array
 */
var nextItem = function nextItem(items, item) {
  var currentIndex = item ? items.indexOf(item) : -1;
  return currentIndex >= 0 && currentIndex + 1 <= items.length - 1 ? items[currentIndex + 1] : undefined;
};
/**
 * Find the previous item in an array, compared to an item in the array
 */
var previousItem = function previousItem(items, item) {
  var currentIndex = item ? items.indexOf(item) : -1;
  return currentIndex >= 0 && currentIndex - 1 <= items.length - 1 ? items[currentIndex - 1] : undefined;
};
var AccordionSection = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var id = _ref.id,
    label = _ref.label,
    _ref$headingLevel = _ref.headingLevel,
    headingLevel = _ref$headingLevel === void 0 ? 1 : _ref$headingLevel,
    _ref$expanded = _ref.expanded,
    expanded = _ref$expanded === void 0 ? false : _ref$expanded,
    disabled = _ref.disabled,
    section = _ref.section,
    children = _ref.children,
    buttonRef = _ref.buttonRef,
    onActivate = _ref.onActivate,
    onButtonBlur = _ref.onButtonBlur,
    onButtonFocus = _ref.onButtonFocus;
  var panelAttributes = {
    className: clsx('utrecht-accordion__panel', {
      'utrecht-accordion__panel--expanded': expanded
    }),
    // Use the `hidden` attribute so the toggle works even without CSS
    hidden: !expanded,
    // Use the `aria-hidden` attribute too, so it even works when CSS
    // doesn't use `display: none` to make transitions.
    'aria-hidden': !expanded
  };
  var idPrefix = 'utrecht-accordion';
  var idSuffix = id || useId();
  var buttonId = "".concat(idPrefix).concat(idSuffix, "-button");
  var panelId = "".concat(idPrefix).concat(idSuffix, "-panel");
  // We render `__section` as `div` for a specific reasons:
  // - when a user navigates to the `region` landmark we want the first
  //   content of the landmark to be the actual content, instead of starting
  //   with the button that controls the region.
  // - we only want expanded sections to show up as landmarks
  return jsxs("div", {
    className: clsx('utrecht-accordion__section'),
    id: id,
    ref: ref,
    children: [jsx(Heading, {
      level: headingLevel,
      className: clsx('utrecht-accordion__header'),
      children: jsx(Button, {
        className: clsx('utrecht-accordion__button'),
        appearance: "subtle-button",
        "aria-expanded": expanded === true,
        "aria-controls": panelId,
        disabled: disabled,
        id: buttonId,
        onClick: function onClick() {
          return typeof onActivate === 'function' && onActivate(ref);
        },
        onFocus: function onFocus() {
          return typeof onButtonFocus === 'function' && onButtonFocus(ref);
        },
        onBlur: function onBlur() {
          return typeof onButtonBlur === 'function' && onButtonBlur(ref);
        },
        ref: buttonRef,
        children: label
      })
    }), section ? jsx("section", _objectSpread$1h(_objectSpread$1h({
      id: panelId,
      "aria-labelledby": buttonId
    }, panelAttributes), {}, {
      children: children
    })) : jsx("div", _objectSpread$1h(_objectSpread$1h({}, panelAttributes), {}, {
      children: children
    }))]
  });
});
AccordionSection.displayName = 'AccordionSection';
var Accordion = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    group = _ref2.group,
    headingLevel = _ref2.headingLevel,
    heading = _ref2.heading,
    props = _objectWithoutProperties(_ref2, _excluded$1h);
  var headingId = useId();
  return jsxs(Fragment, {
    children: [!!heading && typeof headingLevel === 'number' && jsx(Heading, {
      level: headingLevel,
      children: heading
    }), jsx("div", _objectSpread$1h(_objectSpread$1h({
      className: clsx('utrecht-accordion'),
      role: group ? 'group' : undefined,
      "aria-labelledby": group ? headingId : undefined
    }, props), {}, {
      ref: ref,
      children: children
    }))]
  });
});
Accordion.displayName = 'Accordion';
var useAccordion = function useAccordion(sections, ref) {
  console.log('useAccordion');
  // const sections: AccordionSectionProviderProps[] = [];
  var refs = sections.map(function (_) {
    return useRef(null);
  });
  var buttonRefs = sections.map(function (_) {
    return useRef(null);
  });
  return {
    ref: ref,
    refs: refs,
    buttonRefs: buttonRefs,
    /* ForwardedRef of the last section to receive focus */
    activeElement: null,
    /* ForwardedRef for each section, in document order */
    sections: sections,
    focusNextSection: function focusNextSection(activeElement) {
      var _nextSection$current;
      var index = refs.indexOf(activeElement);
      var buttonRef = index >= 0 ? buttonRefs[index] : undefined;
      var nextSection = buttonRef ? nextItem(buttonRefs, buttonRef) : undefined;
      nextSection === null || nextSection === void 0 ? void 0 : (_nextSection$current = nextSection.current) === null || _nextSection$current === void 0 ? void 0 : _nextSection$current.focus();
    },
    focusFirstSection: function focusFirstSection() {
      var _firstSection$current;
      var firstSection = firstItem(buttonRefs);
      console.log(refs);
      firstSection === null || firstSection === void 0 ? void 0 : (_firstSection$current = firstSection.current) === null || _firstSection$current === void 0 ? void 0 : _firstSection$current.focus();
    },
    focusPreviousSection: function focusPreviousSection(activeElement) {
      var _previousSection$curr;
      var index = refs.indexOf(activeElement);
      var buttonRef = index >= 0 ? buttonRefs[index] : undefined;
      var previousSection = buttonRef ? previousItem(buttonRefs, buttonRef) : undefined;
      previousSection === null || previousSection === void 0 ? void 0 : (_previousSection$curr = previousSection.current) === null || _previousSection$curr === void 0 ? void 0 : _previousSection$curr.focus();
    },
    focusLastSection: function focusLastSection() {
      var _firstSection$current2;
      var firstSection = lastItem(buttonRefs);
      firstSection === null || firstSection === void 0 ? void 0 : (_firstSection$current2 = firstSection.current) === null || _firstSection$current2 === void 0 ? void 0 : _firstSection$current2.focus();
    }
  };
};
var AccordionProvider = function AccordionProvider(_ref4) {
  var sections = _ref4.sections;
  var ref = useRef(null);
  var _useAccordion = useAccordion(sections, ref),
    refs = _useAccordion.refs,
    buttonRefs = _useAccordion.buttonRefs,
    focusNextSection = _useAccordion.focusNextSection,
    focusFirstSection = _useAccordion.focusFirstSection,
    focusLastSection = _useAccordion.focusLastSection,
    focusPreviousSection = _useAccordion.focusPreviousSection;
  var _useState = useState(null),
    _useState2 = _slicedToArray(_useState, 2),
    activeElement = _useState2[0],
    setActiveElement = _useState2[1];
  var _useState3 = useState(sections),
    _useState4 = _slicedToArray(_useState3, 2),
    sectionsState = _useState4[0],
    setSectionsState = _useState4[1];
  var handleButtonFocus = function handleButtonFocus(ref) {
    setActiveElement(ref);
  };
  var handleButtonBlur = function handleButtonBlur(_) {
    setActiveElement(null);
  };
  var handleKeyDown = function handleKeyDown(evt) {
    if (evt.code === 'End') {
      focusLastSection();
    } else if (evt.code === 'Home') {
      focusFirstSection();
    } else if (evt.code === 'ArrowDown') {
      if (activeElement) {
        focusNextSection(activeElement);
      }
    } else if (evt.code === 'ArrowUp') {
      if (activeElement) {
        focusPreviousSection(activeElement);
      }
    } else {
      // Do not `preventDefault()`
      return;
    }
    // Prevent scrolling the page
    evt.preventDefault();
  };
  return jsx(Accordion, {
    onKeyDown: handleKeyDown,
    ref: ref,
    children: sectionsState.map(function (section, index) {
      var handleActivate = function handleActivate(ref) {
        var activatedIndex = refs.indexOf(ref);
        // const activatedSection = activatedIndex >= 0 ? sections[index] : undefined;
        setSectionsState(sectionsState.map(function (section, index) {
          if (index === activatedIndex) {
            return _objectSpread$1h(_objectSpread$1h({}, section), {}, {
              expanded: !section.expanded
            });
          } else {
            return section;
          }
        }));
      };
      return /*#__PURE__*/createElement(AccordionSection, _objectSpread$1h(_objectSpread$1h({}, section), {}, {
        ref: refs[index],
        buttonRef: buttonRefs[index],
        key: index,
        onButtonFocus: handleButtonFocus,
        onButtonBlur: handleButtonBlur,
        onActivate: handleActivate
      }), section.body);
    })
  });
};
AccordionProvider.displayName = 'AccordionProvider';

var _excluded$1g = ["children", "className", "icon", "type"];
function ownKeys$1g(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1g(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1g(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1g(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Alert = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    icon = _ref.icon,
    type = _ref.type,
    restProps = _objectWithoutProperties(_ref, _excluded$1g);
  return jsxs("div", _objectSpread$1g(_objectSpread$1g({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-alert', {
      'utrecht-alert--error': type === 'error',
      'utrecht-alert--info': type === 'info',
      'utrecht-alert--ok': type === 'ok',
      'utrecht-alert--warning': type === 'warning'
    }, className),
    children: [icon && jsx("div", {
      className: "utrecht-alert__icon",
      children: icon
    }), jsx("div", {
      className: "utrecht-alert__message",
      children: children
    })]
  }));
});
Alert.displayName = 'Alert';

var _excluded$1f = ["children", "className", "icon", "type"];
function ownKeys$1f(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1f(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1f(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1f(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var AlertDialog = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    icon = _ref.icon,
    type = _ref.type,
    restProps = _objectWithoutProperties(_ref, _excluded$1f);
  return jsxs("dialog", _objectSpread$1f(_objectSpread$1f({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-alert-dialog', {
      'utrecht-alert-dialog--error': type === 'error',
      'utrecht-alert-dialog--info': type === 'info',
      'utrecht-alert-dialog--warning': type === 'warning',
      className: className
    }),
    children: [icon && jsx("div", {
      className: "utrecht-alert-dialog__icon",
      children: icon
    }), jsx("div", {
      className: "utrecht-alert-dialog__message",
      children: children
    })]
  }));
});
AlertDialog.displayName = 'AlertDialog';

var _excluded$1e = ["children", "className"];
function ownKeys$1e(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1e(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1e(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1e(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Article = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$1e);
  return jsx("article", _objectSpread$1e(_objectSpread$1e({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-article', className),
    children: children
  }));
});
Article.displayName = 'Article';

var _excluded$1d = ["children", "className"];
function ownKeys$1d(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1d(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1d(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1d(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Backdrop = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$1d);
  return jsx("div", _objectSpread$1d(_objectSpread$1d({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-backdrop', className),
    children: children
  }));
});
Backdrop.displayName = 'Backdrop';

var _excluded$1c = ["children", "className", "value"];
function ownKeys$1c(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1c(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1c(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1c(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BadgeCounter = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    value = _ref.value,
    restProps = _objectWithoutProperties(_ref, _excluded$1c);
  var props = _objectSpread$1c({
    children: children,
    className: clsx('utrecht-badge-counter', className)
  }, restProps);
  return typeof value !== 'undefined' ? jsx("data", _objectSpread$1c(_objectSpread$1c({}, props), {}, {
    value: value,
    ref: ref
  })) : jsx("span", _objectSpread$1c(_objectSpread$1c({}, props), {}, {
    ref: ref
  }));
});
BadgeCounter.displayName = 'BadgeCounter';

var _excluded$1b = ["children", "className"];
function ownKeys$1b(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1b(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1b(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1b(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var BadgeList = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$1b);
  return jsx("div", _objectSpread$1b(_objectSpread$1b({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-badge-list', className),
    children: children
  }));
});
BadgeList.displayName = 'BadgeList';

var _excluded$1a = ["boxContent", "children", "className", "external", "href", "placeholder", "role"];
function ownKeys$1a(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1a(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1a(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1a(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Link = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var boxContent = _ref.boxContent,
    children = _ref.children,
    className = _ref.className,
    external = _ref.external,
    href = _ref.href,
    placeholder = _ref.placeholder,
    role = _ref.role,
    restProps = _objectWithoutProperties(_ref, _excluded$1a);
  return (
    // "utrecht-link--telephone" does not have a corresponding API,
    // since it is primarily a basis for implementing input[href^="tel"].
    // Telephone number rendering in React is best achieved using composition
    // of the TelephoneValue component.
    jsx("a", _objectSpread$1a(_objectSpread$1a({
      href: placeholder ? undefined : href,
      ref: ref,
      role: role || (placeholder ? 'link' : undefined),
      className: clsx('utrecht-link', {
        'utrecht-link--box-content': boxContent,
        'utrecht-link--external': external,
        'utrecht-link--placeholder': placeholder
      }, className),
      "aria-disabled": placeholder ? 'true' : undefined,
      rel: external ? 'external noopener noreferrer' : undefined
    }, restProps), {}, {
      children: children
    }))
  );
});
Link.displayName = 'Link';

var _excluded$19 = ["appearance", "children", "className", "headingLevel", "label"];
function ownKeys$19(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$19(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$19(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$19(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var useMicrodataItem = function useMicrodataItem(_ref) {
  var prop = _ref.prop,
    type = _ref.type;
  return {
    itemScope: true,
    itemType: type,
    itemProp: prop
  };
};
var useMicrodataProp = function useMicrodataProp(prop) {
  return {
    itemProp: prop
  };
};
var BreadcrumbNav = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var appearance = _ref2.appearance,
    children = _ref2.children,
    className = _ref2.className,
    _ref2$headingLevel = _ref2.headingLevel,
    headingLevel = _ref2$headingLevel === void 0 ? 2 : _ref2$headingLevel,
    label = _ref2.label,
    restProps = _objectWithoutProperties(_ref2, _excluded$19);
  var headingId = label ? useId() : undefined;
  return jsxs("nav", _objectSpread$19(_objectSpread$19({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-breadcrumb', {
      'utrecht-breadcrumb--arrows': appearance === 'arrows'
    }, className),
    "aria-labelledby": headingId,
    children: [label && jsx(Heading, {
      id: headingId,
      className: "utrecht-breadcrumb__heading",
      level: headingLevel,
      "aria-hidden": "true",
      children: label
    }), jsx("ol", _objectSpread$19(_objectSpread$19({
      className: "utrecht-breadcrumb__list"
    }, useMicrodataItem({
      type: 'https://schema.org/BreadcrumbList'
    })), {}, {
      children: children
    }))]
  }));
});
BreadcrumbNav.displayName = 'BreadcrumbNav';
var BreadcrumbLink = /*#__PURE__*/forwardRef(function (_ref3, ref) {
  var children = _ref3.children,
    current = _ref3.current,
    href = _ref3.href,
    index = _ref3.index,
    rel = _ref3.rel;
  return jsx("li", _objectSpread$19(_objectSpread$19({
    className: "utrecht-breadcrumb__item"
  }, useMicrodataItem({
    type: 'https://schema.org/ListItem',
    prop: 'itemListElement'
  })), {}, {
    children: jsxs(Link, _objectSpread$19(_objectSpread$19({
      className: "utrecht-breadcrumb__link",
      href: href,
      rel: rel,
      "aria-current": current && 'location'
    }, useMicrodataProp('item')), {}, {
      ref: ref,
      children: [jsx("span", _objectSpread$19(_objectSpread$19({
        className: "utrecht-breadcrumb__text"
      }, useMicrodataProp('name')), {}, {
        children: children
      })), typeof index === 'number' ? jsx("meta", _objectSpread$19(_objectSpread$19({}, useMicrodataProp('position')), {}, {
        content: String(index + 1)
      })) : null]
    }))
  }));
});
BreadcrumbLink.displayName = 'BreadcrumbLink';

var _excluded$18 = ["children", "className"];
function ownKeys$18(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$18(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$18(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$18(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ButtonGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$18);
  return jsx("p", _objectSpread$18(_objectSpread$18({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-button-group', className),
    children: children
  }));
});
ButtonGroup.displayName = 'ButtonGroup';

var _excluded$17 = ["appearance", "children", "className", "external", "href", "placeholder", "role"];
function ownKeys$17(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$17(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$17(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$17(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var onKeyDown = function onKeyDown(evt) {
  var _evt$target;
  if (evt.key === ' ' && typeof ((_evt$target = evt.target) === null || _evt$target === void 0 ? void 0 : _evt$target.click) === 'function') {
    // Prevent other side-effects, such as scrolling
    evt.preventDefault();
    // Navigate to the link target
    evt.target.click();
  }
};
var ButtonLink = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var appearance = _ref.appearance,
    children = _ref.children,
    className = _ref.className,
    external = _ref.external,
    href = _ref.href,
    placeholder = _ref.placeholder,
    role = _ref.role,
    restProps = _objectWithoutProperties(_ref, _excluded$17);
  var props = restProps;
  if (role === 'button') {
    // When this link is announced as button by accessibility tools,
    // it should also behave like a button. Links are not activated
    // using `Space`, so we need to implement that behaviour here
    // to reach parity with the `button` element.
    props = _objectSpread$17(_objectSpread$17({}, restProps), {}, {
      onKeyDown: onKeyDown
    });
  }
  return jsx("a", _objectSpread$17(_objectSpread$17({
    href: placeholder ? undefined : href,
    ref: ref,
    role: role || (placeholder ? 'link' : undefined),
    className: clsx('utrecht-button-link', 'utrecht-button-link--html-a', {
      'utrecht-button-link--external': external,
      'utrecht-button-link--primary-action': appearance === 'primary-action-button',
      'utrecht-button-link--secondary-action': appearance === 'secondary-action-button',
      'utrecht-button-link--subtle': appearance === 'subtle-button',
      'utrecht-button-link--placeholder': placeholder
    }, className),
    rel: external ? 'external noopener noreferrer' : undefined,
    "aria-disabled": placeholder ? 'true' : undefined
  }, props), {}, {
    children: children
  }));
});
ButtonLink.displayName = 'ButtonLink';

var _excluded$16 = ["children"];
function ownKeys$16(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$16(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$16(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$16(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarNavigation = function CalendarNavigation(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$16);
  return jsx("div", _objectSpread$16(_objectSpread$16({
    className: "utrecht-calendar__navigation"
  }, props), {}, {
    children: children
  }));
};

var _excluded$15 = ["children", "className"];
function ownKeys$15(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$15(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$15(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$15(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarButton = function CalendarButton(_ref) {
  var children = _ref.children,
    className = _ref.className,
    props = _objectWithoutProperties(_ref, _excluded$15);
  return jsx(Button, _objectSpread$15(_objectSpread$15({
    appearance: "subtle-button"
  }, props), {}, {
    className: clsx$1('utrecht-calendar__button', className),
    children: children
  }));
};

var _excluded$14 = ["children"];
function ownKeys$14(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$14(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$14(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$14(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarIcon = function CalendarIcon(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$14);
  return jsx("div", _objectSpread$14(_objectSpread$14({
    className: clsx$1('utrecht-calendar__icon')
  }, props), {}, {
    children: children
  }));
};

var _excluded$13 = ["onPreviousClick", "onNextClick", "previousIcon", "nextIcon", "children"];
function ownKeys$13(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$13(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$13(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$13(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarNavigationButtons = function CalendarNavigationButtons(_ref) {
  var onPreviousClick = _ref.onPreviousClick,
    onNextClick = _ref.onNextClick,
    previousIcon = _ref.previousIcon,
    nextIcon = _ref.nextIcon,
    children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$13);
  return jsxs("div", {
    className: "utrecht-calendar__navigation-buttons",
    children: [jsx(CalendarButton, _objectSpread$13(_objectSpread$13({
      onClick: onPreviousClick
    }, props), {}, {
      children: jsx(CalendarIcon, {
        children: previousIcon
      })
    })), children, jsx(CalendarButton, _objectSpread$13(_objectSpread$13({
      onClick: onNextClick
    }, props), {}, {
      children: jsx(CalendarIcon, {
        children: nextIcon
      })
    }))]
  });
};

var _excluded$12 = ["children"];
function ownKeys$12(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$12(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$12(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$12(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarNavigationLabel = function CalendarNavigationLabel(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$12);
  return jsx("time", _objectSpread$12(_objectSpread$12({
    className: "utrecht-calendar__navigation-label"
  }, props), {}, {
    children: children
  }));
};

var _excluded$11 = ["children"];
function ownKeys$11(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$11(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$11(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$11(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarTableDaysContainer = function CalendarTableDaysContainer(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$11);
  return jsx("tbody", _objectSpread$11(_objectSpread$11({}, props), {}, {
    className: "utrecht-calendar__table-days-container",
    children: children
  }));
};

var _excluded$10 = ["children"];
function ownKeys$10(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$10(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$10(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$10(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarTableDaysItem = function CalendarTableDaysItem(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$10);
  return jsx("tr", _objectSpread$10(_objectSpread$10({}, props), {}, {
    children: children
  }));
};

var _excluded$$ = ["day", "dayOutOfTheMonth", "isToday", "emphasis", "selected", "disabled"];
function ownKeys$$(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$$(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$$(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$$(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarTableDaysItemDay = function CalendarTableDaysItemDay(_ref) {
  var day = _ref.day,
    dayOutOfTheMonth = _ref.dayOutOfTheMonth,
    isToday = _ref.isToday,
    emphasis = _ref.emphasis,
    selected = _ref.selected,
    disabled = _ref.disabled,
    props = _objectWithoutProperties(_ref, _excluded$$);
  return jsx("td", {
    children: jsx(CalendarButton, _objectSpread$$(_objectSpread$$({
      className: clsx('utrecht-calendar__table-days-item-day', {
        'utrecht-calendar__table-days-item-day--out-of-the-month': dayOutOfTheMonth
      }, {
        'utrecht-calendar__table-days-item-day--is-today': isToday
      }, {
        'utrecht-calendar__table-days-item-day--emphasis': emphasis
      }, {
        'utrecht-calendar__table-days-item-day--selected': selected
      }),
      disabled: disabled
    }, props), {}, {
      children: day
    }))
  });
};

var CalendarTableWeeksContainer = function CalendarTableWeeksContainer(_ref) {
  var children = _ref.children;
  return jsx("thead", {
    className: "utrecht-calendar__table-weeks-container",
    children: jsx("tr", {
      className: "utrecht-calendar__table-weeks-container-content",
      children: children
    })
  });
};

var _excluded$_ = ["children"];
function ownKeys$_(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$_(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$_(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$_(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CalendarTableWeeksItem = function CalendarTableWeeksItem(_ref) {
  var children = _ref.children,
    props = _objectWithoutProperties(_ref, _excluded$_);
  return jsx("th", _objectSpread$_(_objectSpread$_({}, props), {}, {
    className: "utrecht-calendar__table-weeks-item",
    children: children
  }));
};

var _excluded$Z = ["title", "titleId"];
function ownKeys$Z(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$Z(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$Z(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$Z(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var IconArrowLeft = function IconArrowLeft(_ref) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded$Z);
  return jsxs("svg", _objectSpread$Z(_objectSpread$Z({
    width: "100%",
    height: "100%",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    "aria-labelledby": titleId
  }, props), {}, {
    children: [title ? jsx("title", {
      id: titleId,
      children: title
    }) : null, jsx("path", {
      d: "M15.41 16.59 10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41Z",
      fill: "currentColor"
    })]
  }));
};

var _excluded$Y = ["title", "titleId"];
function ownKeys$Y(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$Y(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$Y(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$Y(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var IconArrowLeftDouble = function IconArrowLeftDouble(_ref) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded$Y);
  return jsxs("svg", _objectSpread$Y(_objectSpread$Y({
    width: "100%",
    height: "100%",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    "aria-labelledby": titleId
  }, props), {}, {
    children: [title ? jsx("title", {
      id: titleId,
      children: title
    }) : null, jsx("path", {
      d: "M17.59 18 19 16.59 14.42 12 19 7.41 17.59 6l-6 6 6 6Z",
      fill: "currentColor"
    }), jsx("path", {
      d: "m11 18 1.41-1.41L7.83 12l4.58-4.59L11 6l-6 6 6 6Z",
      fill: "currentColor"
    })]
  }));
};

var _excluded$X = ["title", "titleId"];
function ownKeys$X(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$X(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$X(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$X(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var IconArrowRight = function IconArrowRight(_ref) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded$X);
  return jsxs("svg", _objectSpread$X(_objectSpread$X({
    width: "100%",
    height: "100%",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    "aria-labelledby": titleId
  }, props), {}, {
    children: [title ? jsx("title", {
      id: titleId,
      children: title
    }) : null, jsx("path", {
      d: "M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41Z",
      fill: "currentColor"
    })]
  }));
};

var _excluded$W = ["title", "titleId"];
function ownKeys$W(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$W(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$W(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$W(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var IconArrowRightDouble = function IconArrowRightDouble(_ref) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded$W);
  return jsxs("svg", _objectSpread$W(_objectSpread$W({
    fill: "none",
    width: "100%",
    height: "100%",
    xmlns: "http://www.w3.org/2000/svg",
    "aria-labelledby": titleId
  }, props), {}, {
    children: [title ? jsx("title", {
      id: titleId,
      children: title
    }) : null, jsx("path", {
      d: "M6.41 6 5 7.41 9.58 12 5 16.59 6.41 18l6-6-6-6Z",
      fill: "currentColor"
    }), jsx("path", {
      d: "m13 6-1.41 1.41L16.17 12l-4.58 4.59L13 18l6-6-6-6Z",
      fill: "currentColor"
    })]
  }));
};

function createCalendar(today) {
  var start = startOfWeek(startOfMonth(today), {
    weekStartsOn: 1 /* Monday */
  });

  var end = endOfWeek(addWeeks(start, 5), {
    weekStartsOn: 1 /* Monday */
  });

  return eachDayOfInterval({
    start: start,
    end: end
  });
}
/**
 * Calendar Component
 * powered by date-fns, so that make it easy to use the `date-fns` date functions & locale
 * */
var Calendar = function Calendar(_ref) {
  var onCalendarClick = _ref.onCalendarClick,
    events = _ref.events,
    currentDate = _ref.currentDate,
    _ref$locale = _ref.locale,
    locale = _ref$locale === void 0 ? enUS : _ref$locale,
    _ref$previousYearButt = _ref.previousYearButtonTitle,
    previousYearButtonTitle = _ref$previousYearButt === void 0 ? 'Previous year' : _ref$previousYearButt,
    _ref$nextYearButtonTi = _ref.nextYearButtonTitle,
    nextYearButtonTitle = _ref$nextYearButtonTi === void 0 ? 'Next year' : _ref$nextYearButtonTi,
    _ref$previousMonthBut = _ref.previousMonthButtonTitle,
    previousMonthButtonTitle = _ref$previousMonthBut === void 0 ? 'Previous month' : _ref$previousMonthBut,
    _ref$nextMonthButtonT = _ref.nextMonthButtonTitle,
    nextMonthButtonTitle = _ref$nextMonthButtonT === void 0 ? 'Next month' : _ref$nextMonthButtonT,
    minDate = _ref.minDate,
    maxDate = _ref.maxDate;
  var _useState = useState(currentDate || new Date()),
    _useState2 = _slicedToArray(_useState, 2),
    visibleMonth = _useState2[0],
    setVisibleMonth = _useState2[1];
  var _useState3 = useState(currentDate),
    _useState4 = _slicedToArray(_useState3, 2),
    selectedDate = _useState4[0],
    setSelectedDate = _useState4[1];
  var calendar = createCalendar(visibleMonth);
  var start = startOfWeek(visibleMonth, {
    weekStartsOn: 1
  });
  var end = endOfWeek(visibleMonth, {
    weekStartsOn: 1
  });
  var currentWeek = eachDayOfInterval({
    start: start,
    end: end
  }).map(function (day) {
    return day;
  });
  var chunksWeeks = chunk(calendar, calendar.length / 6);
  var weeks = chunksWeeks.map(function (week) {
    return week.map(function (date) {
      var currentEvent = events && events.length > 0 && events.find(function (e) {
        return isSameDay(endOfDay(parseISO(e.date)), date);
      });
      if (currentEvent) {
        return {
          date: date,
          emphasis: currentEvent.emphasis,
          selected: currentEvent.selected,
          disabled: currentEvent.disabled
        };
      } else {
        return {
          date: date,
          emphasis: false,
          selected: false,
          disabled: false
        };
      }
    });
  });
  return jsxs("div", {
    className: "utrecht-calendar",
    children: [jsx(CalendarNavigation, {
      children: jsx(CalendarNavigationButtons, {
        previousIcon: jsx(IconArrowLeftDouble, {
          title: previousYearButtonTitle
        }),
        nextIcon: jsx(IconArrowRightDouble, {
          title: nextYearButtonTitle
        }),
        onPreviousClick: function onPreviousClick() {
          return setVisibleMonth(setYear(visibleMonth, getYear(visibleMonth) - 1));
        },
        onNextClick: function onNextClick() {
          return setVisibleMonth(addYears(visibleMonth, 1));
        },
        children: jsx(CalendarNavigationButtons, {
          previousIcon: jsx(IconArrowLeft, {
            title: previousMonthButtonTitle
          }),
          nextIcon: jsx(IconArrowRight, {
            title: nextMonthButtonTitle
          }),
          onPreviousClick: function onPreviousClick() {
            return setVisibleMonth(setMonth(visibleMonth, visibleMonth.getMonth() - 1));
          },
          onNextClick: function onNextClick() {
            return setVisibleMonth(addMonths(visibleMonth, 1));
          },
          children: jsx(CalendarNavigationLabel, {
            dateTime: format(visibleMonth, 'yyyy-mm'),
            children: format(visibleMonth, 'LLLL Y', {
              locale: locale
            })
          })
        })
      })
    }), jsxs("table", {
      className: "utrecht-calendar__table",
      role: "grid",
      children: [jsx(CalendarTableWeeksContainer, {
        children: currentWeek && currentWeek.length > 0 && currentWeek.map(function (day, index) {
          return jsx(CalendarTableWeeksItem, {
            scope: "col",
            abbr: format(day, 'EEEE', {
              locale: locale
            }),
            children: format(day, 'EEEEEE', {
              locale: locale
            })
          }, index);
        })
      }), jsx(CalendarTableDaysContainer, {
        children: weeks && weeks.length > 0 && weeks.map(function (week, index) {
          return jsx(CalendarTableDaysItem, {
            children: week.map(function (day, index) {
              return jsx(CalendarTableDaysItemDay, {
                isToday: isSameDay(day.date, Date.now()),
                dayOutOfTheMonth: !isSameMonth(day.date, visibleMonth),
                onClick: function onClick() {
                  setVisibleMonth(day.date);
                  if (isSameMonth(day.date, visibleMonth)) {
                    setSelectedDate(day.date);
                    onCalendarClick(formatISO(day.date));
                  }
                },
                "aria-label": format(day.date, 'eeee dd LLLL Y', {
                  locale: locale
                }),
                day: day.date.getDate().toString(),
                emphasis: day.emphasis,
                selected: day.selected || selectedDate && isSameDay(day.date, selectedDate),
                disabled: day.disabled || minDate && isBefore(day.date, startOfDay(minDate)) || maxDate && isAfter(day.date, endOfDay(maxDate))
              }, index);
            })
          }, index);
        })
      })]
    })]
  });
};

var _excluded$V = ["appearance", "disabled", "invalid", "required", "className"];
function ownKeys$V(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$V(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$V(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$V(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Checkbox = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'custom' : _ref$appearance,
    disabled = _ref.disabled,
    invalid = _ref.invalid,
    required = _ref.required,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$V);
  return jsx("input", _objectSpread$V(_objectSpread$V({}, restProps), {}, {
    ref: ref,
    type: "checkbox",
    className: clsx('utrecht-checkbox', 'utrecht-checkbox--html-input', {
      'utrecht-checkbox--disabled': disabled,
      'utrecht-checkbox--custom': appearance === 'custom',
      'utrecht-checkbox--invalid': invalid,
      'utrecht-checkbox--required': required
    }, className),
    "aria-invalid": invalid || undefined,
    disabled: disabled,
    required: required
  }));
});
Checkbox.displayName = 'Checkbox';

var _excluded$U = ["children", "className"];
function ownKeys$U(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$U(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$U(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$U(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Code = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$U);
  return jsx("code", _objectSpread$U(_objectSpread$U({
    ref: ref,
    className: clsx('utrecht-code', className)
  }, restProps), {}, {
    children: children
  }));
});
Code.displayName = 'Code';

var _excluded$T = ["children", "className"];
function ownKeys$T(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$T(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$T(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$T(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var CodeBlock = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$T);
  return jsx("pre", _objectSpread$T(_objectSpread$T({
    ref: ref,
    className: clsx('utrecht-code-block', className)
  }, restProps), {}, {
    children: jsx("code", {
      className: "utrecht-code-block__content",
      children: children
    })
  }));
});
CodeBlock.displayName = 'CodeBlock';

var _excluded$S = ["children", "className", "color", "style"];
function ownKeys$S(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$S(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$S(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$S(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var ColorSample = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    color = _ref.color,
    style = _ref.style,
    restProps = _objectWithoutProperties(_ref, _excluded$S);
  return jsx("data", _objectSpread$S(_objectSpread$S({
    ref: ref,
    className: clsx('utrecht-color-sample', className),
    style: _objectSpread$S(_objectSpread$S({}, style), {}, {
      color: color
    }),
    value: color
  }, restProps), {}, {
    children: children
  }));
});
ColorSample.displayName = 'ColorSample';

var _excluded$R = ["children", "className", "dateTime", "value"];
function ownKeys$R(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$R(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$R(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$R(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DataBadge = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    dateTime = _ref.dateTime,
    value = _ref.value,
    restProps = _objectWithoutProperties(_ref, _excluded$R);
  var props = _objectSpread$R({
    children: children,
    className: clsx('utrecht-badge-data', className)
  }, restProps);
  return typeof dateTime !== 'undefined' ? jsx("time", _objectSpread$R(_objectSpread$R({}, props), {}, {
    dateTime: dateTime,
    ref: ref
  })) : typeof value !== 'undefined' ? jsx("data", _objectSpread$R(_objectSpread$R({}, props), {}, {
    value: value,
    ref: ref
  })) : jsx("span", _objectSpread$R(_objectSpread$R({}, props), {}, {
    ref: ref
  }));
});
DataBadge.displayName = 'DataBadge';

var _excluded$Q = ["children", "className"];
function ownKeys$Q(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$Q(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$Q(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$Q(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Document = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$Q);
  return jsx("div", _objectSpread$Q(_objectSpread$Q({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-document', className),
    children: children
  }));
});
Document.displayName = 'Document';

var _excluded$P = ["appearance", "children", "className"],
  _excluded2$3 = ["children", "className"],
  _excluded3 = ["children", "className"],
  _excluded4 = ["children", "className"];
function ownKeys$P(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$P(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$P(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$P(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var DataList = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var appearance = _ref.appearance,
    children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$P);
  return jsx("dl", _objectSpread$P(_objectSpread$P({}, restProps), {}, {
    className: clsx('utrecht-data-list', 'utrecht-data-list--html-dl', appearance === 'rows' && 'utrecht-data-list--rows', className),
    ref: ref,
    children: children
  }));
});
DataList.displayName = 'DataList';
var DataListItem = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    className = _ref2.className,
    restProps = _objectWithoutProperties(_ref2, _excluded2$3);
  return jsx("div", _objectSpread$P(_objectSpread$P({}, restProps), {}, {
    className: clsx('utrecht-data-list__item', className),
    ref: ref,
    children: children
  }));
});
DataListItem.displayName = 'DataListItem';
var DataListKey = /*#__PURE__*/forwardRef(function (_ref3, ref) {
  var children = _ref3.children,
    className = _ref3.className,
    restProps = _objectWithoutProperties(_ref3, _excluded3);
  return jsx("dt", _objectSpread$P(_objectSpread$P({}, restProps), {}, {
    className: clsx('utrecht-data-list__item-key', className),
    ref: ref,
    children: children
  }));
});
DataListKey.displayName = 'DataListKey';
var DataListValue = /*#__PURE__*/forwardRef(function (_ref4, ref) {
  var value = _ref4.value,
    children = _ref4.children,
    className = _ref4.className,
    emptyDescription = _ref4.emptyDescription,
    multiline = _ref4.multiline,
    notranslate = _ref4.notranslate;
  var empty = value === '' || value === null;
  return jsx("dd", {
    className: clsx('utrecht-data-list__item-value', 'utrecht-data-list__item-value--html-dd', className, multiline && 'utrecht-data-list__item-value--multiline'),
    translate: typeof notranslate === 'boolean' ? notranslate ? 'no' : 'yes' : undefined,
    ref: ref,
    children: empty ? jsx("span", {
      "aria-label": emptyDescription,
      children: "-"
    }) : children
  });
});
DataListValue.displayName = 'DataListValue';
var DataListActions = /*#__PURE__*/forwardRef(function (_ref5, ref) {
  var children = _ref5.children,
    className = _ref5.className,
    restProps = _objectWithoutProperties(_ref5, _excluded4);
  return jsx("dd", _objectSpread$P(_objectSpread$P({}, restProps), {}, {
    className: clsx('utrecht-data-list__actions', 'utrecht-data-list__actions--html-dd', className),
    ref: ref,
    children: children
  }));
});
DataListActions.displayName = 'DataListActions';

var _excluded$O = ["children", "className"];
function ownKeys$O(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$O(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$O(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$O(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Emphasis = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$O);
  return jsx("em", _objectSpread$O(_objectSpread$O({
    ref: ref,
    className: clsx('utrecht-emphasis', 'utrecht-emphasis--stressed', className)
  }, restProps), {}, {
    children: children
  }));
});
Emphasis.displayName = 'Emphasis';

var _excluded$N = ["aria-describedby", "aria-label", "aria-labelledby", "className", "children", "disabled", "form", "invalid", "name", "role"],
  _excluded2$2 = ["className", "children", "disabled", "invalid"];
function ownKeys$N(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$N(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$N(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$N(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Fieldset = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var ariaDescribedby = _ref['aria-describedby'],
    ariaLabel = _ref['aria-label'],
    ariaLabelledby = _ref['aria-labelledby'],
    className = _ref.className,
    children = _ref.children,
    disabled = _ref.disabled,
    form = _ref.form,
    invalid = _ref.invalid,
    name = _ref.name,
    role = _ref.role,
    restProps = _objectWithoutProperties(_ref, _excluded$N);
  return jsx("div", _objectSpread$N(_objectSpread$N({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-form-fieldset', disabled && 'utrecht-form-fieldset--disabled', invalid && 'utrecht-form-fieldset--invalid', className),
    children: jsx("fieldset", {
      "aria-describedby": ariaDescribedby,
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledby,
      "aria-invalid": invalid || undefined,
      disabled: disabled,
      form: form,
      name: name,
      role: role,
      className: clsx('utrecht-form-fieldset__fieldset', 'utrecht-form-fieldset--html-fieldset'),
      children: children
    })
  }));
});
Fieldset.displayName = 'Fieldset';
var FieldsetOnly = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var className = _ref2.className,
    children = _ref2.children,
    disabled = _ref2.disabled,
    invalid = _ref2.invalid,
    restProps = _objectWithoutProperties(_ref2, _excluded2$2);
  return jsx("fieldset", _objectSpread$N(_objectSpread$N({}, restProps), {}, {
    ref: ref,
    "aria-invalid": invalid || undefined,
    disabled: disabled,
    className: clsx('utrecht-form-fieldset', 'utrecht-form-fieldset--html-fieldset', disabled && 'utrecht-form-fieldset--disabled', invalid && 'utrecht-form-fieldset--invalid', className),
    children: children
  }));
});
FieldsetOnly.displayName = 'Fieldset';

var _excluded$M = ["className", "children"];
function ownKeys$M(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$M(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$M(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$M(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var FieldsetLegend = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
    children = _ref.children,
    restProps = _objectWithoutProperties(_ref, _excluded$M);
  return jsx("legend", _objectSpread$M(_objectSpread$M({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-form-fieldset__legend', 'utrecht-form-fieldset__legend--html-legend', className),
    children: children
  }));
});
FieldsetLegend.displayName = 'FieldsetLegend';

var _excluded$L = ["className", "children"];
function ownKeys$L(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$L(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$L(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$L(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Figure = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
    children = _ref.children,
    restProps = _objectWithoutProperties(_ref, _excluded$L);
  return jsx("figure", _objectSpread$L(_objectSpread$L({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-figure', className),
    children: children
  }));
});
Figure.displayName = 'Figure';

var _excluded$K = ["className", "children"];
function ownKeys$K(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$K(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$K(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$K(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var FigureCaption = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
    children = _ref.children,
    restProps = _objectWithoutProperties(_ref, _excluded$K);
  return jsx("figcaption", _objectSpread$K(_objectSpread$K({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-figure__caption', className),
    children: children
  }));
});
FigureCaption.displayName = 'FigureCaption';

var _excluded$J = ["className", "children", "invalid", "type"];
function ownKeys$J(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$J(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$J(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$J(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var FormField = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
    children = _ref.children,
    invalid = _ref.invalid,
    type = _ref.type,
    restProps = _objectWithoutProperties(_ref, _excluded$J);
  return jsx("div", _objectSpread$J(_objectSpread$J({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-form-field', {
      'utrecht-form-field--invalid': invalid,
      'utrecht-form-field--checkbox': type === 'checkbox',
      'utrecht-form-field--radio': type === 'radio',
      'utrecht-form-field--text': !type || type === 'text'
    }, className),
    children: children
  }));
});
FormField.displayName = 'FormField';

var _excluded$I = ["invalid", "valid", "warning", "className", "children"];
function ownKeys$I(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$I(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$I(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$I(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var FormFieldDescription = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var invalid = _ref.invalid,
    valid = _ref.valid,
    warning = _ref.warning,
    className = _ref.className,
    children = _ref.children,
    restProps = _objectWithoutProperties(_ref, _excluded$I);
  return jsx("div", _objectSpread$I(_objectSpread$I({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-form-field-description', invalid && 'utrecht-form-field-description--invalid', valid && 'utrecht-form-field-description--valid', warning && 'utrecht-form-field-description--warning', className),
    children: children
  }));
});
FormFieldDescription.displayName = 'FormFieldDescription';

var _excluded$H = ["children", "className", "type", "disabled", "checked"];
function ownKeys$H(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$H(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$H(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$H(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var FormLabel = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    type = _ref.type,
    disabled = _ref.disabled,
    checked = _ref.checked,
    restProps = _objectWithoutProperties(_ref, _excluded$H);
  return jsx("label", _objectSpread$H(_objectSpread$H({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-form-label', type && "utrecht-form-label--".concat(type), disabled && 'utrecht-form-label--disabled', checked && 'utrecht-form-label--checked', className),
    children: children
  }));
});
FormLabel.displayName = 'FormLabel';

var _excluded$G = ["children", "className"];
function ownKeys$G(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$G(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$G(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$G(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var HTMLContent = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$G);
  return jsx("div", _objectSpread$G(_objectSpread$G({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-html', className),
    children: children
  }));
});
HTMLContent.displayName = 'HTMLContent';

var _excluded$F = ["children", "className"];
function ownKeys$F(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$F(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$F(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$F(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading1 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$F);
  return jsx("h1", _objectSpread$F(_objectSpread$F({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-1', className),
    children: children
  }));
});
Heading1.displayName = 'Heading1';

var _excluded$E = ["children", "className"];
function ownKeys$E(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$E(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$E(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$E(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading2 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$E);
  return jsx("h2", _objectSpread$E(_objectSpread$E({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-2', className),
    children: children
  }));
});
Heading2.displayName = 'Heading2';

var _excluded$D = ["children", "className"];
function ownKeys$D(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$D(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$D(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$D(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading3 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$D);
  return jsx("h3", _objectSpread$D(_objectSpread$D({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-3', className),
    children: children
  }));
});
Heading3.displayName = 'Heading3';

var _excluded$C = ["children", "className"];
function ownKeys$C(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$C(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$C(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$C(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading4 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$C);
  return jsx("h4", _objectSpread$C(_objectSpread$C({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-4', className),
    children: children
  }));
});
Heading4.displayName = 'Heading4';

var _excluded$B = ["children", "className"];
function ownKeys$B(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$B(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$B(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$B(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading5 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$B);
  return jsx("h5", _objectSpread$B(_objectSpread$B({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-5', className),
    children: children
  }));
});
Heading5.displayName = 'Heading5';

var _excluded$A = ["children", "className"];
function ownKeys$A(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$A(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$A(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$A(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Heading6 = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$A);
  return jsx("h6", _objectSpread$A(_objectSpread$A({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-6', className),
    children: children
  }));
});
Heading6.displayName = 'Heading6';

var _excluded$z = ["children", "className"];
function ownKeys$z(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$z(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$z(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$z(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var HeadingGroup = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$z);
  return jsx("hgroup", _objectSpread$z(_objectSpread$z({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-heading-group', className),
    children: children
  }));
});
HeadingGroup.displayName = 'HeadingGroup';

var _excluded$y = ["children", "className"];
function ownKeys$y(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$y(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$y(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$y(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Icon = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$y);
  return jsx("span", _objectSpread$y(_objectSpread$y({
    ref: ref,
    className: clsx('utrecht-icon', className)
  }, restProps), {}, {
    children: children
  }));
});
Icon.displayName = 'Icon';

var _excluded$x = ["className", "photo"];
function ownKeys$x(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$x(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$x(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$x(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Image = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
    photo = _ref.photo,
    restProps = _objectWithoutProperties(_ref, _excluded$x);
  return jsx("img", _objectSpread$x(_objectSpread$x({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-img', {
      'utrecht-img--photo': photo
    }, className)
  }));
});
Image.displayName = 'Image';

var _excluded$w = ["children", "disabled", "inline", "className", "pressed", "type"];
function ownKeys$w(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$w(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$w(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$w(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var LinkButton = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    disabled = _ref.disabled,
    inline = _ref.inline,
    className = _ref.className,
    pressed = _ref.pressed,
    type = _ref.type,
    restProps = _objectWithoutProperties(_ref, _excluded$w);
  return jsx("button", _objectSpread$w(_objectSpread$w({
    ref: ref,
    "aria-pressed": typeof pressed === 'boolean' ? pressed : undefined,
    className: clsx('utrecht-link-button', 'utrecht-link-button--html-button', {
      'utrecht-link-button--disabled': disabled,
      'utrecht-link-button--inline': inline,
      'utrecht-link-button--pressed': pressed
    }, className),
    disabled: disabled,
    type: type || 'button'
  }, restProps), {}, {
    children: children
  }));
});
LinkButton.displayName = 'LinkButton';

var _excluded$v = ["children", "className", "external"];
function ownKeys$v(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$v(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$v(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$v(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var LinkSocial = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    external = _ref.external,
    restProps = _objectWithoutProperties(_ref, _excluded$v);
  return jsx("a", _objectSpread$v(_objectSpread$v({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-link-social', className),
    rel: external !== false ? 'external noopener noreferrer' : undefined,
    children: children
  }));
});
LinkSocial.displayName = 'LinkSocial';

var ListSocial = function ListSocial(_ref) {
  var children = _ref.children;
  return jsx("ul", {
    className: clsx('utrecht-list-social'),
    children: children
  });
};
var ListSocialItem = function ListSocialItem(_ref2) {
  var children = _ref2.children;
  return jsx("li", {
    className: clsx('utrecht-list-social__item'),
    children: children
  });
};

var _excluded$u = ["children", "className"];
function ownKeys$u(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$u(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$u(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$u(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Mark = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$u);
  return jsx("mark", _objectSpread$u(_objectSpread$u({
    ref: ref,
    className: clsx('utrecht-mark', className)
  }, restProps), {}, {
    children: children
  }));
});
Mark.displayName = 'Mark';

var _excluded$t = ["children", "className", "value"];
function ownKeys$t(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$t(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$t(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$t(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var NumberValue = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    value = _ref.value,
    restProps = _objectWithoutProperties(_ref, _excluded$t);
  return jsx("data", _objectSpread$t(_objectSpread$t({
    value: typeof value === 'string' || typeof value === 'number' ? String(value) : undefined
  }, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-value-number', className),
    children: children
  }));
});
NumberValue.displayName = 'NumberValue';

var _excluded$s = ["children", "className"];
function ownKeys$s(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$s(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$s(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$s(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var OrderedList = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$s);
  return jsx("ol", _objectSpread$s(_objectSpread$s({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-ordered-list', className),
    children: children
  }));
});
OrderedList.displayName = 'OrderedList';

var _excluded$r = ["children", "className"];
function ownKeys$r(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$r(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$r(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$r(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var OrderedListItem = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$r);
  return jsx("li", _objectSpread$r(_objectSpread$r({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-ordered-list__item', className),
    children: children
  }));
});
OrderedListItem.displayName = 'OrderedListItem';

var _excluded$q = ["children", "className"];
function ownKeys$q(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$q(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$q(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$q(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Page = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$q);
  return jsx("div", _objectSpread$q(_objectSpread$q({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-page', className),
    children: children
  }));
});
Page.displayName = 'Page';

var _excluded$p = ["children", "className"],
  _excluded2$1 = ["children", "className"];
function ownKeys$p(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$p(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$p(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$p(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PageContent = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$p);
  return jsx("div", _objectSpread$p(_objectSpread$p({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-page-content', className),
    children: children
  }));
});
PageContent.displayName = 'PageContent';
var PageContentMain = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var children = _ref2.children,
    className = _ref2.className,
    restProps = _objectWithoutProperties(_ref2, _excluded2$1);
  return jsx("main", _objectSpread$p(_objectSpread$p({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-page-content__main', className),
    children: children
  }));
});
PageContentMain.displayName = 'PageContentMain';

var _excluded$o = ["children", "className"];
function ownKeys$o(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$o(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$o(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$o(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PageFooter = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$o);
  return jsx("footer", _objectSpread$o(_objectSpread$o({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-page-footer', className),
    children: children
  }));
});
PageFooter.displayName = 'PageFooter';

var _excluded$n = ["children", "className"];
function ownKeys$n(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$n(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$n(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$n(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PageHeader = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$n);
  return jsx("header", _objectSpread$n(_objectSpread$n({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-page-header', className),
    children: children
  }));
});
PageHeader.displayName = 'PageHeader';

var _excluded$m = ["children", "className", "lead", "small"];
function ownKeys$m(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$m(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$m(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$m(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Paragraph = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    lead = _ref.lead,
    small = _ref.small,
    restProps = _objectWithoutProperties(_ref, _excluded$m);
  return jsx("p", _objectSpread$m(_objectSpread$m({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-paragraph', lead && 'utrecht-paragraph--lead', small && 'utrecht-paragraph--small', className),
    children: lead ? jsx("b", {
      className: "utrecht-paragraph__b",
      children: children
    }) : small ? jsx("small", {
      className: "utrecht-paragraph__small",
      children: children
    }) : children
  }));
});
Paragraph.displayName = 'Paragraph';

var _excluded$l = ["children", "className"];
function ownKeys$l(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$l(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$l(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$l(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var PreHeading = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$l);
  return jsx("p", _objectSpread$l(_objectSpread$l({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-pre-heading', className),
    children: children
  }));
});
PreHeading.displayName = 'PreHeading';

var _excluded$k = ["disabled", "required", "className", "invalid"];
function ownKeys$k(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$k(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$k(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$k(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var RadioButton = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var disabled = _ref.disabled,
    required = _ref.required,
    className = _ref.className,
    invalid = _ref.invalid,
    restProps = _objectWithoutProperties(_ref, _excluded$k);
  return jsx("input", _objectSpread$k({
    type: "radio",
    "aria-invalid": invalid || undefined,
    disabled: disabled,
    required: required,
    ref: ref,
    className: clsx('utrecht-radio-button', 'utrecht-radio-button--html-input', disabled && 'utrecht-radio-button--disabled', invalid && 'utrecht-radio-button--invalid', className)
  }, restProps));
});
RadioButton.displayName = 'RadioButton';

var _excluded$j = ["invalid", "required", "className", "noscript", "children"],
  _excluded2 = ["disabled", "invalid", "value", "children", "className"];
function ownKeys$j(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$j(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$j(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$j(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Select = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var invalid = _ref.invalid,
    required = _ref.required,
    className = _ref.className,
    noscript = _ref.noscript,
    children = _ref.children,
    restProps = _objectWithoutProperties(_ref, _excluded$j);
  return jsx("select", _objectSpread$j(_objectSpread$j({}, restProps), {}, {
    ref: ref,
    "aria-invalid": invalid || undefined,
    required: noscript ? required : false,
    "aria-required": noscript ? undefined : required,
    className: clsx('utrecht-select', 'utrecht-select--html-select', invalid && 'utrecht-select--invalid', required && 'utrecht-select--required', className),
    children: children
  }));
});
Select.displayName = 'Select';
var SelectOption = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var disabled = _ref2.disabled,
    invalid = _ref2.invalid,
    value = _ref2.value,
    children = _ref2.children,
    className = _ref2.className,
    restProps = _objectWithoutProperties(_ref2, _excluded2);
  return jsx("option", _objectSpread$j(_objectSpread$j({}, restProps), {}, {
    ref: ref,
    disabled: disabled,
    value: value,
    className: clsx('utrecht-select__option', disabled && 'utrecht-select__option--disabled', invalid && 'utrecht-select__option--invalid', className),
    children: children
  }));
});
SelectOption.displayName = 'SelectOption';

var _excluded$i = ["className", "children"];
function ownKeys$i(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$i(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$i(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$i(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// Do not pass `children` along with `restProps` and use _children as it's unused
var Separator = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className;
    _ref.children;
    var restProps = _objectWithoutProperties(_ref, _excluded$i);
  return jsx("hr", _objectSpread$i(_objectSpread$i({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-separator', className)
  }));
});
Separator.displayName = 'Separator';

var _excluded$h = ["children", "className"];
function ownKeys$h(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$h(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$h(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$h(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var SkipLink = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$h);
  return jsx("p", {
    children: jsx("a", _objectSpread$h(_objectSpread$h({
      ref: ref
    }, restProps), {}, {
      className: clsx('utrecht-skip-link', 'utrecht-skip-link--visible-on-focus', className),
      children: children
    }))
  });
});
SkipLink.displayName = 'SkipLink';

var _excluded$g = ["aside", "children", "className", "type"];
function ownKeys$g(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$g(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$g(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$g(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var SpotlightSection = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var aside = _ref.aside,
    children = _ref.children,
    className = _ref.className,
    type = _ref.type,
    restProps = _objectWithoutProperties(_ref, _excluded$g);
  var props = _objectSpread$g(_objectSpread$g({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-spotlight-section', {
      'utrecht-spotlight-section--info': type === 'info',
      'utrecht-spotlight-section--warning': type === 'warning'
    }, className)
  });
  return aside ? jsx("aside", _objectSpread$g(_objectSpread$g({}, props), {}, {
    children: children
  })) : jsx("section", _objectSpread$g(_objectSpread$g({}, props), {}, {
    children: children
  }));
});
SpotlightSection.displayName = 'SpotlightSection';

var _excluded$f = ["className", "status"];
function ownKeys$f(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$f(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$f(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$f(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var StatusBadge = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var className = _ref.className,
    status = _ref.status,
    restProps = _objectWithoutProperties(_ref, _excluded$f);
  return jsx("span", _objectSpread$f(_objectSpread$f({
    className: clsx('utrecht-badge-status', "utrecht-badge-status--".concat(status ? status : 'neutral'), className)
  }, restProps), {}, {
    ref: ref
  }));
});
StatusBadge.displayName = 'StatusBadge';

var _excluded$e = ["children", "className"];
function ownKeys$e(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$e(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$e(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$e(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Strong = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$e);
  return jsx("strong", _objectSpread$e(_objectSpread$e({
    ref: ref,
    className: clsx('utrecht-emphasis', 'utrecht-emphasis--strong', className)
  }, restProps), {}, {
    children: children
  }));
});
Strong.displayName = 'Strong';

var _excluded$d = ["children", "className"];
function ownKeys$d(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$d(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$d(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$d(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Surface = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$d);
  return jsx("div", _objectSpread$d(_objectSpread$d({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-surface', className),
    children: children
  }));
});
Surface.displayName = 'Surface';

var _excluded$c = ["children", "className"];
function ownKeys$c(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$c(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$c(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$c(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Table = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$c);
  return jsx("table", _objectSpread$c(_objectSpread$c({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table', className),
    children: children
  }));
});
Table.displayName = 'Table';

var _excluded$b = ["children", "className"];
function ownKeys$b(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$b(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$b(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$b(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableBody = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$b);
  return jsx("tbody", _objectSpread$b(_objectSpread$b({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__body', className),
    children: children
  }));
});
TableBody.displayName = 'TableBody';

var _excluded$a = ["children", "className"];
function ownKeys$a(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$a(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$a(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$a(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableCaption = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$a);
  return jsx("caption", _objectSpread$a(_objectSpread$a({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__caption', className),
    children: children
  }));
});
TableCaption.displayName = 'TableCaption';

var _excluded$9 = ["children", "className", "selected"];
function ownKeys$9(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$9(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$9(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableCell = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    selected = _ref.selected,
    restProps = _objectWithoutProperties(_ref, _excluded$9);
  return jsx("td", _objectSpread$9(_objectSpread$9({
    "aria-selected": selected ? true : undefined
  }, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__cell', {
      'utrecht-table__cell--selected': selected
    }, className),
    children: children
  }));
});
TableCell.displayName = 'TableCell';

var _excluded$8 = ["children", "className"];
function ownKeys$8(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$8(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$8(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableFooter = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$8);
  return jsx("tfoot", _objectSpread$8(_objectSpread$8({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__footer', className),
    children: children
  }));
});
TableFooter.displayName = 'TableFooter';

var _excluded$7 = ["children", "className"];
function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$7(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableHeader = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$7);
  return jsx("thead", _objectSpread$7(_objectSpread$7({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__header', className),
    children: children
  }));
});
TableHeader.displayName = 'TableHeader';

var _excluded$6 = ["children", "className", "selected"];
function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableHeaderCell = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    selected = _ref.selected,
    restProps = _objectWithoutProperties(_ref, _excluded$6);
  return jsx("th", _objectSpread$6(_objectSpread$6({
    "aria-selected": selected ? true : undefined
  }, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__header-cell', {
      'utrecht-table__header-cell--selected': selected
    }, className),
    children: children
  }));
});
TableHeaderCell.displayName = 'TableHeaderCell';

var _excluded$5 = ["children", "className", "selected"];
function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var TableRow = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    selected = _ref.selected,
    restProps = _objectWithoutProperties(_ref, _excluded$5);
  return jsx("tr", _objectSpread$5(_objectSpread$5({
    "aria-selected": selected ? true : undefined
  }, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-table__row', {
      'utrecht-table__row--selected': selected
    }, className),
    children: children
  }));
});
TableRow.displayName = 'TableRow';

var _excluded$4 = ["disabled", "invalid", "readOnly", "required", "className"];
function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Textarea = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var disabled = _ref.disabled,
    invalid = _ref.invalid,
    readOnly = _ref.readOnly,
    required = _ref.required,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$4);
  return jsx("textarea", _objectSpread$4(_objectSpread$4({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-textarea', 'utrecht-textarea--html-textarea', disabled && 'utrecht-textarea--disabled', invalid && 'utrecht-textarea--invalid', readOnly && 'utrecht-textarea--readonly', required && 'utrecht-textarea--required', className),
    disabled: disabled,
    readOnly: readOnly,
    required: required,
    "aria-invalid": invalid || undefined
  }));
});
Textarea.displayName = 'Textarea';

var _excluded$3 = ["disabled", "invalid", "readOnly", "required", "className", "type", "maxLength", "inputMode"];
function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var Textbox = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var disabled = _ref.disabled,
    invalid = _ref.invalid,
    readOnly = _ref.readOnly,
    required = _ref.required,
    className = _ref.className,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'text' : _ref$type,
    maxLength = _ref.maxLength,
    inputMode = _ref.inputMode,
    restProps = _objectWithoutProperties(_ref, _excluded$3);
  return jsx("input", _objectSpread$3(_objectSpread$3({}, restProps), {}, {
    ref: ref,
    type: type,
    className: clsx('utrecht-textbox', 'utrecht-textbox--html-input', disabled && 'utrecht-textbox--disabled', invalid && 'utrecht-textbox--invalid', readOnly && 'utrecht-textbox--readonly', required && 'utrecht-textbox--required', className),
    maxLength: maxLength,
    disabled: disabled,
    readOnly: readOnly,
    required: required,
    "aria-invalid": invalid || undefined,
    inputMode: inputMode || (type === 'number' ? 'numeric' : undefined)
  }));
});
Textbox.displayName = 'Textbox';

var _excluded$2 = ["children", "className"];
function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var URLValue = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$2);
  return jsx("bdi", _objectSpread$2(_objectSpread$2({
    translate: "no"
  }, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-url', className),
    children: children
  }));
});
URLValue.displayName = 'URLValue';

var _excluded$1 = ["children", "className"];
function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var UnorderedList = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded$1);
  return jsx("ul", _objectSpread$1(_objectSpread$1({
    role: "list"
  }, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-unordered-list', className),
    children: children
  }));
});
UnorderedList.displayName = 'UnorderedList';

var _excluded = ["children", "className"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var UnorderedListItem = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
    className = _ref.className,
    restProps = _objectWithoutProperties(_ref, _excluded);
  return jsx("li", _objectSpread(_objectSpread({}, restProps), {}, {
    ref: ref,
    className: clsx('utrecht-unordered-list__item', className),
    children: children
  }));
});
UnorderedListItem.displayName = 'UnorderedListItem';

export { Accordion, AccordionProvider, AccordionSection, Alert, AlertDialog, Article, Backdrop, BadgeCounter, BadgeList, BreadcrumbLink, BreadcrumbNav, Button, ButtonGroup, ButtonLink, Calendar, Checkbox, Code, CodeBlock, ColorSample, DataBadge, DataList, DataListActions, DataListItem, DataListKey, DataListValue, Document, Emphasis, Fieldset, FieldsetLegend, Figure, FigureCaption, FormField, FormFieldDescription, FormLabel, HTMLContent, Heading, Heading1, Heading2, Heading3, Heading4, Heading5, Heading6, HeadingGroup, Icon, Image, Link, LinkButton, LinkSocial, ListSocial, ListSocialItem, Mark, NumberValue, OrderedList, OrderedListItem, Page, PageContent, PageFooter, PageHeader, Paragraph, PreHeading, PrimaryActionButton, RadioButton, SecondaryActionButton, Select, SelectOption, Separator, SkipLink, SpotlightSection, StatusBadge, Strong, SubtleButton, Surface, Table, TableBody, TableCaption, TableCell, TableFooter, TableHeader, TableHeaderCell, TableRow, Textarea, Textbox, URLValue, UnorderedList, UnorderedListItem };
//# sourceMappingURL=index.esm.js.map
